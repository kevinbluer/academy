{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"input/","text":"Hello World Nullam quis risus eget urna mollis ornare vel eu leo. Nulla vitae elit libero, a pharetra augue. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Curabitur blandit tempus porttitor.","title":"Hello World"},{"location":"input/#hello-world","text":"Nullam quis risus eget urna mollis ornare vel eu leo. Nulla vitae elit libero, a pharetra augue. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Curabitur blandit tempus porttitor.","title":"Hello World"},{"location":"test/","text":"Testing... Use this page for hacking around with MD :) // SPDX-License-Identifier: MIT pragma solidity >=0.4.22 <0.8.0; import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\"; import \"@openzeppelin/contracts/utils/Counters.sol\"; import \"@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol\"; contract MFT is ERC721, ERC721Burnable { using Counters for Counters.Counter; Counters.Counter private _id; constructor() ERC721(\"Truffle Creator\", \"TRFL\") public { _setBaseURI(\"ipfs://\"); } function mint(address owner, string memory cid) public returns (uint256) { _id.increment(); uint256 newId = _id.current(); _mint(owner, newId); _setTokenURI(newId, cid); return newId; } }","title":"Testing..."},{"location":"test/#testing","text":"Use this page for hacking around with MD :) // SPDX-License-Identifier: MIT pragma solidity >=0.4.22 <0.8.0; import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\"; import \"@openzeppelin/contracts/utils/Counters.sol\"; import \"@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol\"; contract MFT is ERC721, ERC721Burnable { using Counters for Counters.Counter; Counters.Counter private _id; constructor() ERC721(\"Truffle Creator\", \"TRFL\") public { _setBaseURI(\"ipfs://\"); } function mint(address owner, string memory cid) public returns (uint256) { _id.increment(); uint256 newId = _id.current(); _mint(owner, newId); _setTokenURI(newId, cid); return newId; } }","title":"Testing..."},{"location":"S00-intro/L1-course-intro/","text":"Welcome! Hello and welcome to ConsenSys Academy\u2019s Blockchain Developer Bootcamp, where you will learn everything you need to know to become a world-class blockchain developer. The blockchain field develops at an incredibly fast pace. [MORE HERE ABOUT WHAT THE RAPID PACE REQUIRES FROM DEVELOPERS, IE continous onboarding]. This course will give you a solid foundation of blockchain principles. It will also introduce you to the tools used to build blockchain projects today. It can be overwhelming to enter such a rapidly developing field. With that in mind, this course aims to teach from a first principles approach . https://explained-from-first-principles.com/ https://en.wikipedia.org/wiki/Reductionism We hope this gives you a deeper understanding of the material that can accommodate the rapid change occurring in the blockchain world.","title":"Welcome!"},{"location":"S00-intro/L1-course-intro/#welcome","text":"Hello and welcome to ConsenSys Academy\u2019s Blockchain Developer Bootcamp, where you will learn everything you need to know to become a world-class blockchain developer. The blockchain field develops at an incredibly fast pace. [MORE HERE ABOUT WHAT THE RAPID PACE REQUIRES FROM DEVELOPERS, IE continous onboarding]. This course will give you a solid foundation of blockchain principles. It will also introduce you to the tools used to build blockchain projects today. It can be overwhelming to enter such a rapidly developing field. With that in mind, this course aims to teach from a first principles approach . https://explained-from-first-principles.com/ https://en.wikipedia.org/wiki/Reductionism We hope this gives you a deeper understanding of the material that can accommodate the rapid change occurring in the blockchain world.","title":"Welcome!"}]}